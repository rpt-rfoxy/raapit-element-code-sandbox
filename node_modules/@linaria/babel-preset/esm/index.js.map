{"version":3,"file":"index.js","names":["debug","transform","slugify","default","preeval","withLinariaMetadata","Module","DefaultModuleImplementation","parseFile","loadLinariaOptions","createEntrypoint","prepareCode","transformUrl","isNode","getTagProcessor","getVisitorKeys","peek","processTemplateExpression","TransformCacheCollection","isEnabled","caller","name","evaluate","linaria","babel","options","JSON","stringify","plugins"],"sources":["../src/index.ts"],"sourcesContent":["/**\n * File defines babel preset for Linaria.\n * It uses ./extract function that is an entry point for styles extraction.\n * It also bypass babel options defined in Linaria config file with it's defaults (see ./utils/loadOptions).\n */\nimport type { ConfigAPI, TransformCaller } from '@babel/core';\n\nimport { debug } from '@linaria/logger';\n\nimport transform from './plugins/babel-transform';\nimport type { PluginOptions } from './transform-stages/helpers/loadLinariaOptions';\n\nexport { slugify } from '@linaria/utils';\n\nexport { default as preeval } from './plugins/preeval';\nexport { default as withLinariaMetadata } from './utils/withLinariaMetadata';\nexport { default as Module, DefaultModuleImplementation } from './module';\nexport { default as transform } from './transform';\nexport * from './types';\nexport { parseFile } from './transform-stages/helpers/parseFile';\nexport { default as loadLinariaOptions } from './transform-stages/helpers/loadLinariaOptions';\nexport type { PluginOptions } from './transform-stages/helpers/loadLinariaOptions';\nexport {\n  createEntrypoint,\n  prepareCode,\n} from './transform-stages/1-prepare-for-eval';\nexport { transformUrl } from './transform-stages/4-extract';\nexport { default as isNode } from './utils/isNode';\nexport { default as getTagProcessor } from './utils/getTagProcessor';\nexport { default as getVisitorKeys } from './utils/getVisitorKeys';\nexport type { VisitorKeys } from './utils/getVisitorKeys';\nexport { default as peek } from './utils/peek';\nexport { processTemplateExpression } from './utils/processTemplateExpression';\nexport { TransformCacheCollection } from './cache';\n\nfunction isEnabled(caller?: TransformCaller & { evaluate?: true }) {\n  return caller?.name !== 'linaria' || caller.evaluate === true;\n}\n\nexport default function linaria(babel: ConfigAPI, options: PluginOptions) {\n  if (!babel.caller(isEnabled)) {\n    return {};\n  }\n  debug('options', JSON.stringify(options));\n  return {\n    plugins: [[transform, options]],\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA,SAASA,KAAK,QAAQ,iBAAiB;AAEvC,OAAOC,SAAS,MAAM,2BAA2B;AAGjD,SAASC,OAAO,QAAQ,gBAAgB;AAExC,SAASC,OAAO,IAAIC,OAAO,QAAQ,mBAAmB;AACtD,SAASD,OAAO,IAAIE,mBAAmB,QAAQ,6BAA6B;AAC5E,SAASF,OAAO,IAAIG,MAAM,EAAEC,2BAA2B,QAAQ,UAAU;AACzE,SAASJ,OAAO,IAAIF,SAAS,QAAQ,aAAa;AAClD,cAAc,SAAS;AACvB,SAASO,SAAS,QAAQ,sCAAsC;AAChE,SAASL,OAAO,IAAIM,kBAAkB,QAAQ,+CAA+C;AAE7F,SACEC,gBAAgB,EAChBC,WAAW,QACN,uCAAuC;AAC9C,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,SAAST,OAAO,IAAIU,MAAM,QAAQ,gBAAgB;AAClD,SAASV,OAAO,IAAIW,eAAe,QAAQ,yBAAyB;AACpE,SAASX,OAAO,IAAIY,cAAc,QAAQ,wBAAwB;AAElE,SAASZ,OAAO,IAAIa,IAAI,QAAQ,cAAc;AAC9C,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,wBAAwB,QAAQ,SAAS;AAElD,SAASC,SAASA,CAACC,MAA8C,EAAE;EACjE,OAAOA,MAAM,EAAEC,IAAI,KAAK,SAAS,IAAID,MAAM,CAACE,QAAQ,KAAK,IAAI;AAC/D;AAEA,eAAe,SAASC,OAAOA,CAACC,KAAgB,EAAEC,OAAsB,EAAE;EACxE,IAAI,CAACD,KAAK,CAACJ,MAAM,CAACD,SAAS,CAAC,EAAE;IAC5B,OAAO,CAAC,CAAC;EACX;EACAnB,KAAK,CAAC,SAAS,EAAE0B,IAAI,CAACC,SAAS,CAACF,OAAO,CAAC,CAAC;EACzC,OAAO;IACLG,OAAO,EAAE,CAAC,CAAC3B,SAAS,EAAEwB,OAAO,CAAC;EAChC,CAAC;AACH"}