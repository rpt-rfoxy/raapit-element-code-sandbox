{"version":3,"file":"transform.js","names":["babel","EventEmitter","TransformCacheCollection","prepareForEval","prepareForEvalSync","evalStage","prepareForRuntime","extractStage","loadLinariaOptions","withLinariaMetadata","syncStages","originalCode","pluginOptions","options","prepareStageResult","babelConfig","cache","eventEmitter","dummy","filename","ast","originalASTCache","get","metadata","code","sourceMap","inputSourceMap","finishStage2Event","pair","stage","evalStageResult","valueCache","dependencies","finishStage3Event","collectStageResult","map","finishStage4Event","extractStageResult","linaria","processors","replacements","transformSync","syncResolve","finishEvent","entrypoint","name","only","prepareStageResults","transform","asyncResolve","invalidateIfChanged"],"sources":["../src/transform.ts"],"sourcesContent":["/**\n * This file exposes transform function that:\n * - parse the passed code to AST\n * - transforms the AST using Linaria babel preset ('./babel/index.js) and additional config defined in Linaria config file or passed to bundler configuration.\n * - runs generated CSS files through default of user-defined preprocessor\n * - generates source maps for CSS files\n * - return transformed code (without Linaria template literals), generated CSS, source maps and babel metadata from transform step.\n */\n\nimport type { TransformOptions } from '@babel/core';\nimport * as babel from '@babel/core';\n\nimport { EventEmitter } from '@linaria/utils';\nimport type { StrictOptions } from '@linaria/utils';\n\nimport { TransformCacheCollection } from './cache';\nimport prepareForEval, {\n  prepareForEvalSync,\n} from './transform-stages/1-prepare-for-eval';\nimport evalStage from './transform-stages/2-eval';\nimport prepareForRuntime from './transform-stages/3-prepare-for-runtime';\nimport extractStage from './transform-stages/4-extract';\nimport loadLinariaOptions from './transform-stages/helpers/loadLinariaOptions';\nimport type { Options, Result, ITransformFileResult } from './types';\nimport withLinariaMetadata from './utils/withLinariaMetadata';\n\nfunction syncStages(\n  originalCode: string,\n  pluginOptions: StrictOptions,\n  options: Pick<\n    Options,\n    'filename' | 'inputSourceMap' | 'root' | 'preprocessor' | 'outputFilename'\n  >,\n  prepareStageResult: ITransformFileResult | undefined,\n  babelConfig: TransformOptions,\n  cache: TransformCacheCollection,\n  eventEmitter = EventEmitter.dummy\n) {\n  const { filename } = options;\n  const ast = cache.originalASTCache.get(filename) ?? 'ignored';\n\n  // File is ignored or does not contain any tags. Return original code.\n  if (\n    ast === 'ignored' ||\n    !prepareStageResult ||\n    !withLinariaMetadata(prepareStageResult.metadata)\n  ) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  // *** 2nd stage ***\n\n  const finishStage2Event = eventEmitter.pair({ stage: 'stage-2', filename });\n\n  const evalStageResult = evalStage(\n    cache,\n    prepareStageResult.code,\n    pluginOptions,\n    filename\n  );\n\n  finishStage2Event();\n\n  if (evalStageResult === null) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  const [valueCache, dependencies] = evalStageResult;\n\n  // *** 3rd stage ***\n\n  const finishStage3Event = eventEmitter.pair({ stage: 'stage-3', filename });\n\n  const collectStageResult = prepareForRuntime(\n    babel,\n    ast,\n    originalCode,\n    valueCache,\n    pluginOptions,\n    options,\n    babelConfig\n  );\n\n  finishStage3Event();\n\n  if (!withLinariaMetadata(collectStageResult.metadata)) {\n    return {\n      code: collectStageResult.code!,\n      sourceMap: collectStageResult.map,\n    };\n  }\n\n  // *** 4th stage\n\n  const finishStage4Event = eventEmitter.pair({ stage: 'stage-4', filename });\n\n  const extractStageResult = extractStage(\n    collectStageResult.metadata.linaria.processors,\n    originalCode,\n    options\n  );\n\n  finishStage4Event();\n\n  return {\n    ...extractStageResult,\n    code: collectStageResult.code ?? '',\n    dependencies,\n    replacements: [\n      ...extractStageResult.replacements,\n      ...collectStageResult.metadata.linaria.replacements,\n    ],\n    sourceMap: collectStageResult.map,\n  };\n}\n\nexport function transformSync(\n  originalCode: string,\n  options: Options,\n  syncResolve: (what: string, importer: string, stack: string[]) => string,\n  babelConfig: TransformOptions = {},\n  cache = new TransformCacheCollection(),\n  eventEmitter = EventEmitter.dummy\n): Result {\n  const { filename } = options;\n  // *** 1st stage ***\n\n  const finishEvent = eventEmitter.pair({ stage: 'stage-1', filename });\n\n  const entrypoint = {\n    name: options.filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  };\n\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const prepareStageResults = prepareForEvalSync(\n    babel,\n    cache,\n    syncResolve,\n    entrypoint,\n    pluginOptions,\n    options\n  );\n\n  finishEvent();\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    pluginOptions,\n    options,\n    prepareStageResults,\n    babelConfig,\n    cache,\n    eventEmitter\n  );\n}\n\nexport default async function transform(\n  originalCode: string,\n  options: Options,\n  asyncResolve: (\n    what: string,\n    importer: string,\n    stack: string[]\n  ) => Promise<string | null>,\n  babelConfig: TransformOptions = {},\n  cache = new TransformCacheCollection(),\n  eventEmitter = EventEmitter.dummy\n): Promise<Result> {\n  const { filename } = options;\n\n  // Cache may contain a code that was loaded from disk, but transform\n  // is called with a code that already processed by another loaders\n  cache.invalidateIfChanged(filename, originalCode);\n\n  // *** 1st stage ***\n\n  const finishEvent = eventEmitter.pair({ stage: 'stage-1', filename });\n\n  const entrypoint = {\n    name: filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  };\n\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const prepareStageResults = await prepareForEval(\n    babel,\n    cache,\n    asyncResolve,\n    entrypoint,\n    pluginOptions,\n    options,\n    eventEmitter\n  );\n\n  finishEvent();\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    pluginOptions,\n    options,\n    prepareStageResults,\n    babelConfig,\n    cache,\n    eventEmitter\n  );\n}\n"],"mappings":"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"}