{"version":3,"file":"preeval.js","names":["_logger","require","_utils","_processTemplateExpression","onFinishCallbacks","WeakMap","preeval","babel","eventEmitter","EventEmitter","dummy","options","types","t","name","pre","file","filename","opts","log","createCustomDebug","getFileIdx","rootScope","scope","processors","onProcessTemplateFinished","pair","method","path","traverse","Identifier","p","processTemplateExpression","processor","dependencies","forEach","dependency","ex","type","addIdentifierToLinariaPreval","doEvaltimeReplacement","push","isFeatureEnabled","features","onCodeRemovingFinished","removeDangerousCode","set","visitor","post","_onFinishCallbacks$ge","get","length","metadata","linaria","replacements","rules","linariaPreval","getData","linariaExport","expressionStatement","assignmentExpression","memberExpression","identifier","objectExpression","pushContainer"],"sources":["../../src/plugins/preeval.ts"],"sourcesContent":["/**\n * This file is a babel preset used to transform files inside evaluators.\n * It works the same as main `babel/extract` preset, but do not evaluate lazy dependencies.\n */\nimport type { BabelFile, PluginObj } from '@babel/core';\n\nimport { createCustomDebug } from '@linaria/logger';\nimport type { StrictOptions } from '@linaria/utils';\nimport {\n  EventEmitter,\n  getFileIdx,\n  addIdentifierToLinariaPreval,\n  removeDangerousCode,\n  isFeatureEnabled,\n} from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport type { IPluginState } from '../types';\nimport { processTemplateExpression } from '../utils/processTemplateExpression';\n\nexport type PreevalOptions = Pick<\n  StrictOptions,\n  'classNameSlug' | 'displayName' | 'evaluate' | 'features'\n> & { eventEmitter: EventEmitter };\n\nconst onFinishCallbacks = new WeakMap<object, () => void>();\n\nexport default function preeval(\n  babel: Core,\n  { eventEmitter = EventEmitter.dummy, ...options }: PreevalOptions\n): PluginObj<IPluginState & { onFinish: () => void }> {\n  const { types: t } = babel;\n  return {\n    name: '@linaria/babel/preeval',\n    pre(file: BabelFile) {\n      const filename = file.opts.filename!;\n      const log = createCustomDebug('preeval', getFileIdx(filename));\n\n      log('start', 'Looking for template literalsâ€¦');\n\n      const rootScope = file.scope;\n      this.processors = [];\n\n      const onProcessTemplateFinished = eventEmitter.pair({\n        method: 'preeval:processTemplate',\n      });\n\n      file.path.traverse({\n        Identifier: (p) => {\n          processTemplateExpression(p, file.opts, options, (processor) => {\n            processor.dependencies.forEach((dependency) => {\n              if (dependency.ex.type === 'Identifier') {\n                addIdentifierToLinariaPreval(rootScope, dependency.ex.name);\n              }\n            });\n\n            processor.doEvaltimeReplacement();\n            this.processors.push(processor);\n          });\n        },\n      });\n\n      onProcessTemplateFinished();\n\n      if (\n        isFeatureEnabled(options.features, 'dangerousCodeRemover', filename)\n      ) {\n        log('start', 'Strip all JSX and browser related stuff');\n        const onCodeRemovingFinished = eventEmitter.pair({\n          method: 'preeval:removeDangerousCode',\n        });\n        removeDangerousCode(file.path);\n        onCodeRemovingFinished();\n      }\n\n      onFinishCallbacks.set(\n        this,\n        eventEmitter.pair({ method: 'preeval:rest-transformations' })\n      );\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      onFinishCallbacks.get(this)?.();\n\n      const log = createCustomDebug('preeval', getFileIdx(file.opts.filename!));\n\n      if (this.processors.length === 0) {\n        log('end', \"We didn't find any Linaria template literals\");\n\n        // We didn't find any Linaria template literals.\n        return;\n      }\n\n      this.file.metadata.linaria = {\n        processors: this.processors,\n        replacements: [],\n        rules: {},\n        dependencies: [],\n      };\n\n      const linariaPreval = file.path.getData('__linariaPreval');\n      if (!linariaPreval) {\n        // Event if there is no dependencies, we still need to add __linariaPreval\n        const linariaExport = t.expressionStatement(\n          t.assignmentExpression(\n            '=',\n            t.memberExpression(\n              t.identifier('exports'),\n              t.identifier('__linariaPreval')\n            ),\n            t.objectExpression([])\n          )\n        );\n\n        file.path.pushContainer('body', linariaExport);\n      }\n\n      log('end', '__linariaPreval has been added');\n    },\n  };\n}\n"],"mappings":"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"}