{"version":3,"file":"babel-transform.js","names":["_logger","require","_utils","_cache","_prepareForEval","_eval","_interopRequireDefault","_loadLinariaOptions","_processTemplateExpression","_withLinariaMetadata","obj","__esModule","default","collector","babel","options","cache","TransformCacheCollection","name","pre","file","_file$opts$root","_file$opts$inputSourc","_file$path$scope$getD","debug","opts","filename","entrypoint","code","only","pluginOptions","loadLinariaOptions","prepareStageResult","prepareForEvalSync","syncResolve","root","undefined","inputSourceMap","withLinariaMetadata","metadata","evalStageResult","evalStage","valueCache","identifiers","path","traverse","Identifier","p","push","forEach","processTemplateExpression","processor","build","doRuntimeReplacement","prevalExport","scope","getData","findParent","isExpressionStatement","removeWithRelated","visitor","post"],"sources":["../../src/plugins/babel-transform.ts"],"sourcesContent":["import type { BabelFile, PluginObj } from '@babel/core';\nimport type { NodePath } from '@babel/traverse';\nimport type { Identifier } from '@babel/types';\n\nimport { debug } from '@linaria/logger';\nimport { removeWithRelated, syncResolve } from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport { TransformCacheCollection } from '../cache';\nimport { prepareForEvalSync } from '../transform-stages/1-prepare-for-eval';\nimport evalStage from '../transform-stages/2-eval';\nimport type { PluginOptions } from '../transform-stages/helpers/loadLinariaOptions';\nimport loadLinariaOptions from '../transform-stages/helpers/loadLinariaOptions';\nimport type { IPluginState } from '../types';\nimport { processTemplateExpression } from '../utils/processTemplateExpression';\nimport withLinariaMetadata from '../utils/withLinariaMetadata';\n\nexport default function collector(\n  babel: Core,\n  options: Partial<PluginOptions>\n): PluginObj<IPluginState> {\n  const cache = new TransformCacheCollection();\n\n  return {\n    name: '@linaria/babel/babel-transform',\n    pre(file: BabelFile) {\n      debug('babel-transform:start', file.opts.filename);\n\n      const entrypoint = {\n        name: file.opts.filename!,\n        code: file.code,\n        only: ['__linariaPreval'],\n      };\n\n      const pluginOptions = loadLinariaOptions(options);\n\n      const prepareStageResult = prepareForEvalSync(\n        babel,\n        cache,\n        syncResolve,\n        entrypoint,\n        pluginOptions,\n        {\n          root: file.opts.root ?? undefined,\n          inputSourceMap: file.opts.inputSourceMap ?? undefined,\n        }\n      );\n\n      if (\n        !prepareStageResult ||\n        !withLinariaMetadata(prepareStageResult?.metadata)\n      ) {\n        return;\n      }\n\n      const evalStageResult = evalStage(\n        cache,\n        prepareStageResult.code,\n        pluginOptions,\n        file.opts.filename!\n      );\n\n      if (evalStageResult === null) {\n        return;\n      }\n\n      const [valueCache] = evalStageResult;\n\n      const identifiers: NodePath<Identifier>[] = [];\n      file.path.traverse({\n        Identifier: (p) => {\n          identifiers.push(p);\n        },\n      });\n      identifiers.forEach((p) => {\n        processTemplateExpression(p, file.opts, pluginOptions, (processor) => {\n          processor.build(valueCache);\n          processor.doRuntimeReplacement();\n        });\n      });\n\n      // We can remove __linariaPreval export and all related code\n      const prevalExport = (\n        file.path.scope.getData('__linariaPreval') as NodePath | undefined\n      )?.findParent((p) => p.isExpressionStatement());\n      if (prevalExport) {\n        removeWithRelated([prevalExport]);\n      }\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      debug('babel-transform:end', file.opts.filename);\n    },\n  };\n}\n"],"mappings":"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"}