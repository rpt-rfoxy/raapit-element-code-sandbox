{"version":3,"file":"collector.js","names":["_logger","require","_utils","_processTemplateExpression","collector","babel","options","_options$values","values","Map","name","pre","file","_file$path$scope$getD","debug","opts","filename","processors","identifiers","path","traverse","Identifier","p","push","forEach","processTemplateExpression","processor","build","doRuntimeReplacement","length","metadata","linaria","replacements","rules","dependencies","prevalExport","scope","getData","findParent","isExpressionStatement","removeWithRelated","visitor"],"sources":["../../src/plugins/collector.ts"],"sourcesContent":["/**\n * Collector traverses the AST and collects information about imports and\n * all Linaria template literals.\n */\n\nimport type { BabelFile, PluginObj } from '@babel/core';\nimport type { NodePath } from '@babel/traverse';\nimport type { Identifier } from '@babel/types';\n\nimport { debug } from '@linaria/logger';\nimport type { StrictOptions, LinariaMetadata } from '@linaria/utils';\nimport { removeWithRelated } from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport type { IPluginState, ValueCache } from '../types';\nimport { processTemplateExpression } from '../utils/processTemplateExpression';\n\nexport default function collector(\n  babel: Core,\n  options: StrictOptions & { values?: ValueCache }\n): PluginObj<IPluginState> {\n  const values = options.values ?? new Map<string, unknown>();\n  return {\n    name: '@linaria/babel/collector',\n    pre(file: BabelFile) {\n      debug('collect:start', file.opts.filename);\n\n      const processors: LinariaMetadata['processors'] = [];\n\n      const identifiers: NodePath<Identifier>[] = [];\n      file.path.traverse({\n        Identifier: (p) => {\n          identifiers.push(p);\n        },\n      });\n\n      // TODO: process transformed literals\n      identifiers.forEach((p) => {\n        processTemplateExpression(p, file.opts, options, (processor) => {\n          processor.build(values);\n          processor.doRuntimeReplacement();\n          processors.push(processor);\n        });\n      });\n\n      if (processors.length === 0) {\n        // We didn't find any Linaria template literals.\n        return;\n      }\n\n      this.file.metadata.linaria = {\n        processors,\n        replacements: [],\n        rules: {},\n        dependencies: [],\n      };\n\n      // We can remove __linariaPreval export and all related code\n      const prevalExport = (\n        file.path.scope.getData('__linariaPreval') as NodePath | undefined\n      )?.findParent((p) => p.isExpressionStatement());\n      if (prevalExport) {\n        removeWithRelated([prevalExport]);\n      }\n\n      debug('collect:end', file.opts.filename);\n    },\n    visitor: {},\n  };\n}\n"],"mappings":";;;;;;AASA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAIA,IAAAE,0BAAA,GAAAF,OAAA;AAfA;AACA;AACA;AACA;;AAce,SAASG,SAASA,CAC/BC,KAAW,EACXC,OAAgD,EACvB;EAAA,IAAAC,eAAA;EACzB,MAAMC,MAAM,IAAAD,eAAA,GAAGD,OAAO,CAACE,MAAM,cAAAD,eAAA,cAAAA,eAAA,GAAI,IAAIE,GAAG,CAAkB,CAAC;EAC3D,OAAO;IACLC,IAAI,EAAE,0BAA0B;IAChCC,GAAGA,CAACC,IAAe,EAAE;MAAA,IAAAC,qBAAA;MACnB,IAAAC,aAAK,EAAC,eAAe,EAAEF,IAAI,CAACG,IAAI,CAACC,QAAQ,CAAC;MAE1C,MAAMC,UAAyC,GAAG,EAAE;MAEpD,MAAMC,WAAmC,GAAG,EAAE;MAC9CN,IAAI,CAACO,IAAI,CAACC,QAAQ,CAAC;QACjBC,UAAU,EAAGC,CAAC,IAAK;UACjBJ,WAAW,CAACK,IAAI,CAACD,CAAC,CAAC;QACrB;MACF,CAAC,CAAC;;MAEF;MACAJ,WAAW,CAACM,OAAO,CAAEF,CAAC,IAAK;QACzB,IAAAG,oDAAyB,EAACH,CAAC,EAAEV,IAAI,CAACG,IAAI,EAAET,OAAO,EAAGoB,SAAS,IAAK;UAC9DA,SAAS,CAACC,KAAK,CAACnB,MAAM,CAAC;UACvBkB,SAAS,CAACE,oBAAoB,CAAC,CAAC;UAChCX,UAAU,CAACM,IAAI,CAACG,SAAS,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,IAAIT,UAAU,CAACY,MAAM,KAAK,CAAC,EAAE;QAC3B;QACA;MACF;MAEA,IAAI,CAACjB,IAAI,CAACkB,QAAQ,CAACC,OAAO,GAAG;QAC3Bd,UAAU;QACVe,YAAY,EAAE,EAAE;QAChBC,KAAK,EAAE,CAAC,CAAC;QACTC,YAAY,EAAE;MAChB,CAAC;;MAED;MACA,MAAMC,YAAY,IAAAtB,qBAAA,GAChBD,IAAI,CAACO,IAAI,CAACiB,KAAK,CAACC,OAAO,CAAC,iBAAiB,CAAC,cAAAxB,qBAAA,uBADvBA,qBAAA,CAElByB,UAAU,CAAEhB,CAAC,IAAKA,CAAC,CAACiB,qBAAqB,CAAC,CAAC,CAAC;MAC/C,IAAIJ,YAAY,EAAE;QAChB,IAAAK,wBAAiB,EAAC,CAACL,YAAY,CAAC,CAAC;MACnC;MAEA,IAAArB,aAAK,EAAC,aAAa,EAAEF,IAAI,CAACG,IAAI,CAACC,QAAQ,CAAC;IAC1C,CAAC;IACDyB,OAAO,EAAE,CAAC;EACZ,CAAC;AACH"}