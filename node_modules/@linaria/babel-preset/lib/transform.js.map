{"version":3,"file":"transform.js","names":["babel","_interopRequireWildcard","require","_utils","_cache","_prepareForEval","_eval","_interopRequireDefault","_prepareForRuntime","_extract","_loadLinariaOptions","_withLinariaMetadata","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","syncStages","originalCode","pluginOptions","options","prepareStageResult","babelConfig","eventEmitter","EventEmitter","dummy","_cache$originalASTCac","_collectStageResult$c","filename","ast","originalASTCache","withLinariaMetadata","metadata","code","sourceMap","inputSourceMap","finishStage2Event","pair","stage","evalStageResult","evalStage","valueCache","dependencies","finishStage3Event","collectStageResult","prepareForRuntime","map","finishStage4Event","extractStageResult","extractStage","linaria","processors","replacements","transformSync","syncResolve","TransformCacheCollection","finishEvent","entrypoint","name","only","loadLinariaOptions","prepareStageResults","prepareForEvalSync","transform","asyncResolve","invalidateIfChanged","prepareForEval"],"sources":["../src/transform.ts"],"sourcesContent":["/**\n * This file exposes transform function that:\n * - parse the passed code to AST\n * - transforms the AST using Linaria babel preset ('./babel/index.js) and additional config defined in Linaria config file or passed to bundler configuration.\n * - runs generated CSS files through default of user-defined preprocessor\n * - generates source maps for CSS files\n * - return transformed code (without Linaria template literals), generated CSS, source maps and babel metadata from transform step.\n */\n\nimport type { TransformOptions } from '@babel/core';\nimport * as babel from '@babel/core';\n\nimport { EventEmitter } from '@linaria/utils';\nimport type { StrictOptions } from '@linaria/utils';\n\nimport { TransformCacheCollection } from './cache';\nimport prepareForEval, {\n  prepareForEvalSync,\n} from './transform-stages/1-prepare-for-eval';\nimport evalStage from './transform-stages/2-eval';\nimport prepareForRuntime from './transform-stages/3-prepare-for-runtime';\nimport extractStage from './transform-stages/4-extract';\nimport loadLinariaOptions from './transform-stages/helpers/loadLinariaOptions';\nimport type { Options, Result, ITransformFileResult } from './types';\nimport withLinariaMetadata from './utils/withLinariaMetadata';\n\nfunction syncStages(\n  originalCode: string,\n  pluginOptions: StrictOptions,\n  options: Pick<\n    Options,\n    'filename' | 'inputSourceMap' | 'root' | 'preprocessor' | 'outputFilename'\n  >,\n  prepareStageResult: ITransformFileResult | undefined,\n  babelConfig: TransformOptions,\n  cache: TransformCacheCollection,\n  eventEmitter = EventEmitter.dummy\n) {\n  const { filename } = options;\n  const ast = cache.originalASTCache.get(filename) ?? 'ignored';\n\n  // File is ignored or does not contain any tags. Return original code.\n  if (\n    ast === 'ignored' ||\n    !prepareStageResult ||\n    !withLinariaMetadata(prepareStageResult.metadata)\n  ) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  // *** 2nd stage ***\n\n  const finishStage2Event = eventEmitter.pair({ stage: 'stage-2', filename });\n\n  const evalStageResult = evalStage(\n    cache,\n    prepareStageResult.code,\n    pluginOptions,\n    filename\n  );\n\n  finishStage2Event();\n\n  if (evalStageResult === null) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  const [valueCache, dependencies] = evalStageResult;\n\n  // *** 3rd stage ***\n\n  const finishStage3Event = eventEmitter.pair({ stage: 'stage-3', filename });\n\n  const collectStageResult = prepareForRuntime(\n    babel,\n    ast,\n    originalCode,\n    valueCache,\n    pluginOptions,\n    options,\n    babelConfig\n  );\n\n  finishStage3Event();\n\n  if (!withLinariaMetadata(collectStageResult.metadata)) {\n    return {\n      code: collectStageResult.code!,\n      sourceMap: collectStageResult.map,\n    };\n  }\n\n  // *** 4th stage\n\n  const finishStage4Event = eventEmitter.pair({ stage: 'stage-4', filename });\n\n  const extractStageResult = extractStage(\n    collectStageResult.metadata.linaria.processors,\n    originalCode,\n    options\n  );\n\n  finishStage4Event();\n\n  return {\n    ...extractStageResult,\n    code: collectStageResult.code ?? '',\n    dependencies,\n    replacements: [\n      ...extractStageResult.replacements,\n      ...collectStageResult.metadata.linaria.replacements,\n    ],\n    sourceMap: collectStageResult.map,\n  };\n}\n\nexport function transformSync(\n  originalCode: string,\n  options: Options,\n  syncResolve: (what: string, importer: string, stack: string[]) => string,\n  babelConfig: TransformOptions = {},\n  cache = new TransformCacheCollection(),\n  eventEmitter = EventEmitter.dummy\n): Result {\n  const { filename } = options;\n  // *** 1st stage ***\n\n  const finishEvent = eventEmitter.pair({ stage: 'stage-1', filename });\n\n  const entrypoint = {\n    name: options.filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  };\n\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const prepareStageResults = prepareForEvalSync(\n    babel,\n    cache,\n    syncResolve,\n    entrypoint,\n    pluginOptions,\n    options\n  );\n\n  finishEvent();\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    pluginOptions,\n    options,\n    prepareStageResults,\n    babelConfig,\n    cache,\n    eventEmitter\n  );\n}\n\nexport default async function transform(\n  originalCode: string,\n  options: Options,\n  asyncResolve: (\n    what: string,\n    importer: string,\n    stack: string[]\n  ) => Promise<string | null>,\n  babelConfig: TransformOptions = {},\n  cache = new TransformCacheCollection(),\n  eventEmitter = EventEmitter.dummy\n): Promise<Result> {\n  const { filename } = options;\n\n  // Cache may contain a code that was loaded from disk, but transform\n  // is called with a code that already processed by another loaders\n  cache.invalidateIfChanged(filename, originalCode);\n\n  // *** 1st stage ***\n\n  const finishEvent = eventEmitter.pair({ stage: 'stage-1', filename });\n\n  const entrypoint = {\n    name: filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  };\n\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const prepareStageResults = await prepareForEval(\n    babel,\n    cache,\n    asyncResolve,\n    entrypoint,\n    pluginOptions,\n    options,\n    eventEmitter\n  );\n\n  finishEvent();\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    pluginOptions,\n    options,\n    prepareStageResults,\n    babelConfig,\n    cache,\n    eventEmitter\n  );\n}\n"],"mappings":"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"}