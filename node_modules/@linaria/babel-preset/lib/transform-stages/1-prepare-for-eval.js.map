{"version":3,"file":"1-prepare-for-eval.js","names":["_fs","require","_path","_logger","_utils","_withLinariaMetadata","_interopRequireDefault","_ModuleQueue","_parseFile","obj","__esModule","default","getKey","plugin","Array","isArray","_key","key","hasKeyInList","list","pluginKey","some","i","includes","runPreevalStage","babel","item","originalAst","pluginOptions","eventEmitter","_babelOptions$plugins","_babelOptions$plugins2","_babelOptions$plugins3","_result$ast","babelOptions","parseConfig","preShakePlugins","plugins","filter","highPriorityPlugins","resolve","transformConfig","buildOptions","envName","result","transformFromAstSync","code","ast","program","Error","prepareCode","evaluator","name","filename","only","log","createCustomDebug","getFileIdx","onPreevalFinished","pair","method","preevalStageResult","length","withLinariaMetadata","metadata","evaluatorConfig","onlyExports","features","onEvaluatorFinished","imports","processQueueItem","cache","_cache$originalASTCac","undefined","onParseFinished","originalASTCache","get","parseFile","set","onlyAsStr","join","preparedCode","isEqual","a","b","sort","every","index","createEntrypoint","maybeCode","options","finishEvent","extension","extname","extensions","readFileSync","action","getMatchedRule","rules","paths","dirname","inputSourceMap","root","sourceFileName","sourceMaps","fullParserOptions","loadBabelOptions","processImports","queue","parent","resolvedImports","importedFile","importsOnly","resolved","entrypoint","resolveCacheKey","resolveCached","resolveCache","importsOnlySet","Set","cachedOnly","split","forEach","token","add","next","enqueue","stack","processEntrypoint","nextItem","invalidateIfChanged","cached","codeCache","mergedOnly","from","evalCache","delete","processed","prepareForEvalSync","partialEntrypoint","EventEmitter","dummy","_cache$codeCache$get","ModuleQueue","isEmpty","_imports$entries","dequeue","processResult","listOfImports","entries","onResolveFinished","map","err","single","type","file","what","prepareForEval","_cache$codeCache$get2","_imports$entries2","Promise","all"],"sources":["../../src/transform-stages/1-prepare-for-eval.ts"],"sourcesContent":["/* eslint-disable no-restricted-syntax,no-continue,no-await-in-loop */\nimport { readFileSync } from 'fs';\nimport { dirname, extname } from 'path';\n\nimport type {\n  BabelFileMetadata,\n  BabelFileResult,\n  PluginItem,\n} from '@babel/core';\nimport type { File } from '@babel/types';\n\nimport type { CustomDebug } from '@linaria/logger';\nimport { createCustomDebug } from '@linaria/logger';\nimport type { Evaluator, EvaluatorConfig, StrictOptions } from '@linaria/utils';\nimport {\n  buildOptions,\n  EventEmitter,\n  getFileIdx,\n  loadBabelOptions,\n} from '@linaria/utils';\n\nimport type { Core } from '../babel';\nimport type { TransformCacheCollection } from '../cache';\nimport type Module from '../module';\nimport type { ITransformFileResult, Options } from '../types';\nimport withLinariaMetadata from '../utils/withLinariaMetadata';\n\nimport type { IEntrypoint, NextItem } from './helpers/ModuleQueue';\nimport { ModuleQueue } from './helpers/ModuleQueue';\nimport { getMatchedRule, parseFile } from './helpers/parseFile';\n\nconst getKey = (plugin: PluginItem): string | null => {\n  if (typeof plugin === 'string') {\n    return plugin;\n  }\n\n  if (Array.isArray(plugin)) {\n    return getKey(plugin[0]);\n  }\n\n  if (typeof plugin === 'object' && plugin !== null && 'key' in plugin) {\n    return (plugin as { key?: string | null }).key ?? null;\n  }\n\n  return null;\n};\n\nconst hasKeyInList = (plugin: PluginItem, list: string[]): boolean => {\n  const pluginKey = getKey(plugin);\n  return pluginKey ? list.some((i) => pluginKey.includes(i)) : false;\n};\n\nfunction runPreevalStage(\n  babel: Core,\n  item: IEntrypoint,\n  originalAst: File,\n  pluginOptions: StrictOptions,\n  eventEmitter: EventEmitter\n): BabelFileResult {\n  const babelOptions = item.parseConfig;\n\n  const preShakePlugins =\n    babelOptions.plugins?.filter((i) =>\n      hasKeyInList(i, pluginOptions.highPriorityPlugins)\n    ) ?? [];\n\n  const plugins = [\n    ...preShakePlugins,\n    [require.resolve('../plugins/preeval'), { ...pluginOptions, eventEmitter }],\n    ...(babelOptions.plugins ?? []).filter(\n      (i) => !hasKeyInList(i, pluginOptions.highPriorityPlugins)\n    ),\n  ];\n\n  const transformConfig = buildOptions({\n    ...babelOptions,\n    envName: 'linaria',\n    plugins,\n  });\n\n  const result = babel.transformFromAstSync(\n    originalAst,\n    item.code,\n    transformConfig\n  );\n\n  if (!result || !result.ast?.program) {\n    throw new Error('Babel transform failed');\n  }\n\n  return result;\n}\n\nexport function prepareCode(\n  babel: Core,\n  item: IEntrypoint,\n  originalAst: File,\n  pluginOptions: StrictOptions,\n  eventEmitter: EventEmitter\n): [code: string, imports: Module['imports'], metadata?: BabelFileMetadata] {\n  const { evaluator, name: filename, parseConfig, only } = item;\n\n  const log = createCustomDebug('transform', getFileIdx(filename));\n\n  const onPreevalFinished = eventEmitter.pair({ method: 'preeval' });\n  const preevalStageResult = runPreevalStage(\n    babel,\n    item,\n    originalAst,\n    pluginOptions,\n    eventEmitter\n  );\n  onPreevalFinished();\n\n  if (\n    only.length === 1 &&\n    only[0] === '__linariaPreval' &&\n    !withLinariaMetadata(preevalStageResult.metadata)\n  ) {\n    log('stage-1:evaluator:end', 'no metadata');\n    return [preevalStageResult.code!, null, preevalStageResult.metadata];\n  }\n\n  log('stage-1:preeval', 'metadata %O', preevalStageResult.metadata);\n  log('stage-1:evaluator:start', 'using %s', evaluator.name);\n\n  const evaluatorConfig: EvaluatorConfig = {\n    onlyExports: only,\n    highPriorityPlugins: pluginOptions.highPriorityPlugins,\n    features: pluginOptions.features,\n  };\n\n  const onEvaluatorFinished = eventEmitter.pair({ method: 'evaluator' });\n  const [, code, imports] = evaluator(\n    parseConfig,\n    preevalStageResult.ast!,\n    preevalStageResult.code!,\n    evaluatorConfig,\n    babel\n  );\n  onEvaluatorFinished();\n\n  log('stage-1:evaluator:end', '');\n\n  return [code, imports, preevalStageResult.metadata];\n}\n\nfunction processQueueItem(\n  babel: Core,\n  item: IEntrypoint | null,\n  cache: TransformCacheCollection,\n  pluginOptions: StrictOptions,\n  eventEmitter: EventEmitter\n):\n  | {\n      imports: Map<string, string[]> | null;\n      name: string;\n      result: ITransformFileResult;\n    }\n  | undefined {\n  if (!item) {\n    return undefined;\n  }\n\n  const { parseConfig, name, only, code } = item;\n\n  const onParseFinished = eventEmitter.pair({ method: 'parseFile' });\n  const ast: File =\n    cache.originalASTCache.get(name) ??\n    parseFile(babel, name, code, parseConfig);\n  onParseFinished();\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n\n  cache.originalASTCache.set(name, ast);\n\n  const onlyAsStr = only.join(', ');\n  log('stage-1', `>> (${onlyAsStr})`);\n\n  const [preparedCode, imports, metadata] = prepareCode(\n    babel,\n    item,\n    ast,\n    pluginOptions,\n    eventEmitter\n  );\n\n  if (code === preparedCode) {\n    log('stage-1', `<< (${onlyAsStr})\\n === no changes ===`);\n  } else {\n    log('stage-1', `<< (${onlyAsStr})\\n${preparedCode}`);\n  }\n\n  if (preparedCode === '') return undefined;\n\n  return {\n    imports,\n    name,\n    result: {\n      code: preparedCode,\n      metadata,\n    },\n  };\n}\n\nconst isEqual = ([...a]: string[], [...b]: string[]) => {\n  if (a.includes('*')) return true;\n  if (a.length !== b.length) return false;\n  a.sort();\n  b.sort();\n  return a.every((item, index) => item === b[index]);\n};\n\nexport function createEntrypoint(\n  babel: Core,\n  name: string,\n  only: string[],\n  maybeCode: string | undefined,\n  pluginOptions: StrictOptions,\n  options: Pick<Options, 'root' | 'inputSourceMap'>,\n  eventEmitter: EventEmitter\n): IEntrypoint | 'ignored' {\n  const finishEvent = eventEmitter.pair({ method: 'createEntrypoint' });\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n  const extension = extname(name);\n\n  if (!pluginOptions.extensions.includes(extension)) {\n    log(\n      'createEntrypoint',\n      `${name} is ignored. If you want it to be processed, you should add '${extension}' to the \"extensions\" option.`\n    );\n\n    finishEvent();\n    return 'ignored';\n  }\n\n  const code = maybeCode ?? readFileSync(name, 'utf-8');\n\n  const { action, babelOptions } = getMatchedRule(\n    pluginOptions.rules,\n    name,\n    code\n  );\n\n  if (action === 'ignore') {\n    log('createEntrypoint', `${name} is ignored by rule`);\n    finishEvent();\n    return 'ignored';\n  }\n\n  const evaluator: Evaluator =\n    typeof action === 'function'\n      ? action\n      : require(require.resolve(action, {\n          paths: [dirname(name)],\n        })).default;\n\n  const parseConfig = buildOptions(pluginOptions?.babelOptions, babelOptions, {\n    ast: true,\n    filename: name,\n    inputSourceMap: options.inputSourceMap,\n    root: options.root,\n    sourceFileName: name,\n    sourceMaps: true,\n  });\n\n  const fullParserOptions = loadBabelOptions(babel, name, parseConfig);\n\n  log('createEntrypoint', `${name} (${only.join(', ')})\\n${code}`);\n\n  finishEvent();\n  return {\n    code,\n    evaluator,\n    name,\n    only,\n    parseConfig: fullParserOptions,\n  };\n}\n\nfunction processImports(\n  babel: Core,\n  log: CustomDebug,\n  cache: TransformCacheCollection,\n  queue: ModuleQueue,\n  pluginOptions: StrictOptions,\n  options: Pick<Options, 'root' | 'inputSourceMap'>,\n  parent: NextItem,\n  resolvedImports: {\n    importsOnly: string[];\n    importedFile: string;\n    resolved: string | null;\n  }[],\n  eventEmitter: EventEmitter\n) {\n  for (const { importedFile, importsOnly, resolved } of resolvedImports) {\n    if (resolved === null) {\n      log(\n        'stage-1:resolve',\n        `✅ %s in %s is ignored`,\n        importedFile,\n        parent.entrypoint.name\n      );\n      continue;\n    }\n\n    const resolveCacheKey = `${parent.entrypoint.name} -> ${importedFile}`;\n    const resolveCached = cache.resolveCache.get(resolveCacheKey);\n    const importsOnlySet = new Set(importsOnly);\n    if (resolveCached) {\n      const [, cachedOnly] = resolveCached.split('\\0');\n      cachedOnly?.split(',').forEach((token) => {\n        importsOnlySet.add(token);\n      });\n    }\n\n    cache.resolveCache.set(\n      resolveCacheKey,\n      `${resolved}\\0${[...importsOnlySet].join(',')}`\n    );\n\n    const next = createEntrypoint(\n      babel,\n      resolved,\n      [...importsOnlySet],\n      undefined,\n      pluginOptions,\n      options,\n      eventEmitter\n    );\n    if (next === 'ignored') {\n      continue;\n    }\n\n    queue.enqueue([next, [parent.entrypoint.name, ...parent.stack]]);\n  }\n}\n\n// FIXME: naming\nfunction processEntrypoint(\n  babel: Core,\n  log: CustomDebug,\n  cache: TransformCacheCollection,\n  pluginOptions: StrictOptions,\n  options: Pick<Options, 'root' | 'inputSourceMap'>,\n  nextItem: NextItem,\n  eventEmitter: EventEmitter\n):\n  | {\n      imports: Map<string, string[]> | null;\n      result: ITransformFileResult;\n      only: string[];\n    }\n  | 'skip' {\n  const { code, name, only } = nextItem.entrypoint;\n\n  cache.invalidateIfChanged(name, code);\n\n  const cached = cache.codeCache.get(name);\n  // If we already have a result for this file, we should get a result for merged `only`\n  const mergedOnly = cached?.only\n    ? Array.from(new Set([...cached.only, ...only]))\n    : only;\n\n  let imports: Map<string, string[]> | null = null;\n  let result: ITransformFileResult | undefined;\n\n  if (cached) {\n    if (isEqual(cached.only, mergedOnly)) {\n      log('stage-1', '%s is already processed', name);\n      if (!nextItem.stack.includes(nextItem.entrypoint.name)) {\n        imports = cached.imports;\n      }\n\n      result = cached.result;\n    } else {\n      log(\n        'stage-1',\n        '%s is already processed, but with different `only` %o (the cached one %o)',\n        name,\n        only,\n        cached?.only\n      );\n\n      // If we already have a result for this file, we should invalidate it\n      cache.evalCache.delete(name);\n    }\n  }\n\n  if (!result) {\n    const processed = processQueueItem(\n      babel,\n      {\n        ...nextItem.entrypoint,\n        only: mergedOnly,\n      },\n      cache,\n      pluginOptions,\n      eventEmitter\n    );\n\n    if (!processed) {\n      log('stage-1', '%s is skipped', name);\n      return 'skip';\n    }\n\n    imports = processed.imports;\n    result = processed.result;\n  }\n\n  return {\n    imports,\n    result,\n    only: mergedOnly,\n  };\n}\n\nexport function prepareForEvalSync(\n  babel: Core,\n  cache: TransformCacheCollection,\n  resolve: (what: string, importer: string, stack: string[]) => string,\n  partialEntrypoint: Pick<IEntrypoint, 'code' | 'name' | 'only'>,\n  pluginOptions: StrictOptions,\n  options: Pick<Options, 'root' | 'inputSourceMap'>,\n  eventEmitter = EventEmitter.dummy\n): ITransformFileResult | undefined {\n  const log = createCustomDebug(\n    'transform',\n    getFileIdx(partialEntrypoint.name)\n  );\n\n  const entrypoint = createEntrypoint(\n    babel,\n    partialEntrypoint.name,\n    partialEntrypoint.only,\n    partialEntrypoint.code,\n    pluginOptions,\n    options,\n    eventEmitter\n  );\n\n  if (entrypoint === 'ignored') {\n    return undefined;\n  }\n\n  const queue = new ModuleQueue(entrypoint);\n\n  while (!queue.isEmpty()) {\n    const item = queue.dequeue();\n    if (!item) {\n      continue;\n    }\n\n    const processResult = processEntrypoint(\n      babel,\n      log,\n      cache,\n      pluginOptions,\n      options,\n      item,\n      eventEmitter\n    );\n    if (processResult === 'skip') {\n      continue;\n    }\n\n    const { imports, result, only: mergedOnly } = processResult;\n    const listOfImports = Array.from(imports?.entries() ?? []);\n\n    if (listOfImports.length > 0) {\n      const onResolveFinished = eventEmitter.pair({ method: 'resolve' });\n      const resolvedImports = listOfImports.map(\n        ([importedFile, importsOnly]) => {\n          let resolved: string | null = null;\n          try {\n            resolved = resolve(importedFile, item.entrypoint.name, item.stack);\n            log(\n              'stage-1:sync-resolve',\n              `✅ ${importedFile} -> ${resolved} (only: %o)`,\n              importsOnly\n            );\n          } catch (err) {\n            log(\n              'stage-1:sync-resolve',\n              `❌ cannot resolve ${importedFile}: %O`,\n              err\n            );\n          }\n\n          return {\n            importedFile,\n            importsOnly,\n            resolved,\n          };\n        }\n      );\n      onResolveFinished();\n\n      eventEmitter.single({\n        type: 'dependency',\n        file: item.entrypoint.name,\n        only: item.entrypoint.only,\n        imports: resolvedImports.map(({ resolved, importsOnly }) => ({\n          from: resolved,\n          what: importsOnly,\n        })),\n      });\n\n      processImports(\n        babel,\n        log,\n        cache,\n        queue,\n        pluginOptions,\n        options,\n        item,\n        resolvedImports,\n        eventEmitter\n      );\n    } else {\n      eventEmitter.single({\n        type: 'dependency',\n        file: item.entrypoint.name,\n        only: item.entrypoint.only,\n        imports: [],\n      });\n\n      log('stage-1', '%s has no imports', item.entrypoint.name);\n    }\n\n    cache.codeCache.set(item.entrypoint.name, {\n      imports,\n      only: mergedOnly,\n      result,\n    });\n  }\n\n  return cache.codeCache.get(entrypoint.name)?.result;\n}\n\n/**\n * Parses the specified file and recursively all its dependencies,\n * finds tags, applies eval-time replacements, removes dead code.\n */\nexport default async function prepareForEval(\n  babel: Core,\n  cache: TransformCacheCollection,\n  resolve: (\n    what: string,\n    importer: string,\n    stack: string[]\n  ) => Promise<string | null>,\n  partialEntrypoint: Pick<IEntrypoint, 'code' | 'name' | 'only'>,\n  pluginOptions: StrictOptions,\n  options: Pick<Options, 'root' | 'inputSourceMap'>,\n  eventEmitter = EventEmitter.dummy\n): Promise<ITransformFileResult | undefined> {\n  /*\n   * This method can be run simultaneously for multiple files.\n   * A shared cache is accessible for all runs, but each run has its own queue\n   * to maintain the correct processing order. The cache stores the outcome\n   * of tree-shaking, and if the result is already stored in the cache\n   * but the \"only\" option has changed, the file will be re-processed using\n   * the combined \"only\" option.\n   */\n  const log = createCustomDebug(\n    'transform',\n    getFileIdx(partialEntrypoint.name)\n  );\n\n  const entrypoint = createEntrypoint(\n    babel,\n    partialEntrypoint.name,\n    partialEntrypoint.only,\n    partialEntrypoint.code,\n    pluginOptions,\n    options,\n    eventEmitter\n  );\n\n  if (entrypoint === 'ignored') {\n    return undefined;\n  }\n\n  const queue = new ModuleQueue(entrypoint);\n\n  while (!queue.isEmpty()) {\n    const item = queue.dequeue();\n    if (!item) {\n      continue;\n    }\n\n    const processResult = processEntrypoint(\n      babel,\n      log,\n      cache,\n      pluginOptions,\n      options,\n      item,\n      eventEmitter\n    );\n    if (processResult === 'skip') {\n      continue;\n    }\n\n    const { imports, result, only: mergedOnly } = processResult;\n\n    const listOfImports = Array.from(imports?.entries() ?? []);\n    if (listOfImports.length > 0) {\n      const onResolveFinished = eventEmitter.pair({ method: 'resolve' });\n      const resolvedImports = await Promise.all(\n        listOfImports.map(async ([importedFile, importsOnly]) => {\n          let resolved: string | null = null;\n          try {\n            resolved = await resolve(\n              importedFile,\n              item.entrypoint.name,\n              item.stack\n            );\n          } catch (err) {\n            log(\n              'stage-1:async-resolve',\n              `❌ cannot resolve %s in %s: %O`,\n              importedFile,\n              item.entrypoint.name,\n              err\n            );\n          }\n\n          if (resolved !== null) {\n            log(\n              'stage-1:async-resolve',\n              `✅ %s (%o) in %s -> %s`,\n              importedFile,\n              importsOnly,\n              item.entrypoint.name,\n              resolved\n            );\n          }\n\n          return {\n            importedFile,\n            importsOnly,\n            resolved,\n          };\n        })\n      );\n      onResolveFinished();\n\n      eventEmitter.single({\n        type: 'dependency',\n        file: item.entrypoint.name,\n        only: item.entrypoint.only,\n        imports: resolvedImports.map(({ resolved, importsOnly }) => ({\n          from: resolved,\n          what: importsOnly,\n        })),\n      });\n\n      processImports(\n        babel,\n        log,\n        cache,\n        queue,\n        pluginOptions,\n        options,\n        item,\n        resolvedImports,\n        eventEmitter\n      );\n    } else {\n      eventEmitter.single({\n        type: 'dependency',\n        file: item.entrypoint.name,\n        only: item.entrypoint.only,\n        imports: [],\n      });\n\n      log('stage-1', '%s has no imports', item.entrypoint.name);\n    }\n\n    cache.codeCache.set(item.entrypoint.name, {\n      imports,\n      only: mergedOnly,\n      result,\n    });\n  }\n\n  log('stage-1', 'queue is empty, %s is ready', entrypoint.name);\n\n  return cache.codeCache.get(entrypoint.name)?.result;\n}\n"],"mappings":"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"}