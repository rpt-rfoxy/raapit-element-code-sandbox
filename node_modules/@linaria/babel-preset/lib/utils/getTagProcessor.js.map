{"version":3,"file":"getTagProcessor.js","names":["_fs","require","_path","_core","_helperModuleImports","_tags","_utils","last","arr","length","zip","arr1","arr2","result","i","push","buildCodeFrameError","path","message","Error","definedTagsCache","Map","getDefinedTagsFromPackage","pkgName","filename","_packageJSON$linaria","has","get","packageJSONPath","findPackageJSON","undefined","packageDir","dirname","packageJSON","JSON","parse","readFileSync","definedTags","linaria","tags","normalizedTags","Object","entries","reduce","acc","key","value","startsWith","join","resolve","paths","set","isValidProcessorClass","module","BaseProcessor","constructor","getProcessorFromPackage","packageName","tagName","processorPath","Processor","default","getProcessorFromFile","getProcessorForIdentifier","imports","options","_options$tagResolver","_relatedImports$map$f","pathBinding","scope","getBinding","node","name","tagResolver","relatedImports","map","local","isIdentifier","isDescendant","binding","filter","isNotNull","isExpression","tagSource","tagPath","imported","source","p","customFile","processor","find","proc","getBuilderForIdentifier","params","prev","current","parentPath","_current","_current2","_current3","_current4","isSequenceExpression","expressions","isCallExpression","callee","args","cookedArgs","arg","buildError","bind","type","getSource","extracted","extractExpression","evaluate","isMemberExpression","object","property","computed","isStringLiteral","isTaggedTemplateExpression","tag","quasis","expressionValues","collectTemplateDependencies","replacer","replacement","isPure","mutate","replaceWith","addComment","astService","t","addDefaultImport","importedSource","nameHint","addDefault","addNamedImport","addNamed","_tagPath$node$loc","loc","getDisplayName","idx","displayName","parent","findParent","isObjectProperty","isJSXOpeningElement","isVariableDeclarator","toString","keyPath","isJSXIdentifier","id","basename","test","replace","isTagReferenced","isReferenced","referencePaths","counters","WeakMap","getNextIndex","state","_counters$get","counter","cache","getTagProcessor","fileContext","_cache$get","root","getProgramParent","collectExportsAndImports","builder","explicitImport","e","SKIP"],"sources":["../../src/utils/getTagProcessor.ts"],"sourcesContent":["import { readFileSync } from 'fs';\nimport { basename, dirname, join } from 'path';\n\nimport { types as t } from '@babel/core';\nimport { addDefault, addNamed } from '@babel/helper-module-imports';\nimport type { NodePath } from '@babel/traverse';\nimport type {\n  Expression,\n  SourceLocation,\n  Identifier,\n  MemberExpression,\n  Program,\n} from '@babel/types';\n\nimport { BaseProcessor } from '@linaria/tags';\nimport type { Param, Params, IFileContext, TagSource } from '@linaria/tags';\nimport type { ExpressionValue, IImport, StrictOptions } from '@linaria/utils';\nimport {\n  collectExportsAndImports,\n  collectTemplateDependencies,\n  explicitImport,\n  extractExpression,\n  findPackageJSON,\n  getSource,\n  isNotNull,\n  mutate,\n} from '@linaria/utils';\n\ntype BuilderArgs = ConstructorParameters<typeof BaseProcessor> extends [\n  Params,\n  TagSource,\n  typeof t,\n  SourceLocation | null,\n  (replacement: Expression, isPure: boolean) => void,\n  ...infer T\n]\n  ? T\n  : never;\n\ntype Builder = (...args: BuilderArgs) => BaseProcessor;\n\ntype ProcessorClass = new (\n  ...args: ConstructorParameters<typeof BaseProcessor>\n) => BaseProcessor;\n\nconst last = <T>(arr: T[]): T | undefined => arr[arr.length - 1];\n\nfunction zip<T1, T2>(arr1: T1[], arr2: T2[]) {\n  const result: (T1 | T2)[] = [];\n  for (let i = 0; i < arr1.length; i++) {\n    result.push(arr1[i]);\n    if (arr2[i]) result.push(arr2[i]);\n  }\n\n  return result;\n}\n\nfunction buildCodeFrameError(path: NodePath, message: string): Error {\n  try {\n    return path.buildCodeFrameError(message);\n  } catch {\n    return new Error(message);\n  }\n}\n\nconst definedTagsCache = new Map<string, Record<string, string> | undefined>();\nconst getDefinedTagsFromPackage = (\n  pkgName: string,\n  filename: string | null | undefined\n): Record<string, string> | undefined => {\n  if (definedTagsCache.has(pkgName)) {\n    return definedTagsCache.get(pkgName);\n  }\n\n  const packageJSONPath = findPackageJSON(pkgName, filename);\n  if (!packageJSONPath) {\n    return undefined;\n  }\n\n  const packageDir = dirname(packageJSONPath);\n  const packageJSON = JSON.parse(readFileSync(packageJSONPath, 'utf8'));\n  const definedTags: Record<string, string> | undefined =\n    packageJSON.linaria?.tags;\n\n  const normalizedTags = definedTags\n    ? Object.entries(definedTags).reduce(\n        (acc, [key, value]) => ({\n          ...acc,\n          [key]: value.startsWith('.')\n            ? join(packageDir, value)\n            : require.resolve(value, { paths: [packageDir] }),\n        }),\n        {} as Record<string, string>\n      )\n    : undefined;\n\n  definedTagsCache.set(pkgName, normalizedTags);\n\n  return normalizedTags;\n};\n\nfunction isValidProcessorClass(module: unknown): module is ProcessorClass {\n  return module instanceof BaseProcessor.constructor;\n}\n\nfunction getProcessorFromPackage(\n  packageName: string,\n  tagName: string,\n  filename: string | null | undefined\n): ProcessorClass | null {\n  const definedTags = getDefinedTagsFromPackage(packageName, filename);\n  const processorPath = definedTags?.[tagName];\n  if (!processorPath) {\n    return null;\n  }\n\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nfunction getProcessorFromFile(processorPath: string): ProcessorClass | null {\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nfunction getProcessorForIdentifier(\n  path: NodePath<Identifier>,\n  imports: IImport[],\n  filename: string | null | undefined,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n):\n  | [ProcessorClass, TagSource, NodePath<Identifier | MemberExpression>]\n  | [null, null, null] {\n  const pathBinding = path.scope.getBinding(path.node.name);\n  if (!pathBinding) {\n    // It's not a binding, so it's not a tag\n    return [null, null, null];\n  }\n\n  const tagResolver = options.tagResolver ?? (() => null);\n\n  // FIXME: can be simplified\n  const relatedImports = imports\n    .map(\n      (i): [IImport, NodePath<Identifier | MemberExpression> | null] | null => {\n        const { local } = i;\n\n        if (local === path) {\n          return [i, null];\n        }\n\n        if (!local.isIdentifier()) {\n          if (path.isDescendant(local)) {\n            return [i, local];\n          }\n\n          return null;\n        }\n\n        const binding = local.scope.getBinding(local.node.name);\n        if (pathBinding === binding) {\n          return [i, path];\n        }\n\n        return null;\n      }\n    )\n    .filter(isNotNull)\n    .filter((i) => i[1] === null || i[1].isExpression());\n\n  if (relatedImports.length === 0) {\n    return [null, null, null];\n  }\n\n  const [Processor = null, tagSource = null, tagPath = null] =\n    relatedImports\n      .map(\n        ([{ imported, source }, p]): [\n          ProcessorClass | null,\n          TagSource,\n          NodePath<Identifier | MemberExpression> | null\n        ] => {\n          const customFile = tagResolver(source, imported);\n          const processor = customFile\n            ? getProcessorFromFile(customFile)\n            : getProcessorFromPackage(source, imported, filename);\n          return [processor, { imported, source }, p];\n        }\n      )\n      .find(([proc]) => proc) ?? [];\n\n  return Processor === null || tagSource === null || tagPath === null\n    ? [null, null, null]\n    : [Processor, tagSource, tagPath];\n}\n\nfunction getBuilderForIdentifier(\n  path: NodePath<Identifier>,\n  imports: IImport[],\n  filename: string | null | undefined,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): Builder | null {\n  const [Processor, tagSource, tagPath] = getProcessorForIdentifier(\n    path,\n    imports,\n    filename,\n    options\n  );\n\n  if (!Processor || !tagSource || !tagPath) {\n    return null;\n  }\n\n  const params: Param[] = [['callee', tagPath.node]];\n  let prev: NodePath = tagPath;\n  let current: NodePath | null = tagPath.parentPath;\n  while (current && current !== path) {\n    if (\n      current?.isSequenceExpression() &&\n      last(current.node.expressions) === prev.node\n    ) {\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isCallExpression({ callee: prev.node })) {\n      const args = current.get('arguments');\n      const cookedArgs = args\n        .map((arg) => {\n          const buildError = arg.buildCodeFrameError.bind(arg);\n          if (!arg.isExpression()) {\n            throw buildError(`Unexpected type of an argument ${arg.type}`);\n          }\n          const source = getSource(arg);\n          const extracted = extractExpression(arg, options.evaluate, imports);\n          return {\n            ...extracted,\n            source,\n            buildCodeFrameError: buildError,\n          } as ExpressionValue;\n        })\n        .filter(isNotNull);\n\n      params.push(['call', ...cookedArgs]);\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isMemberExpression({ object: prev.node })) {\n      const property = current.get('property');\n      if (property.isIdentifier() && !current.node.computed) {\n        params.push(['member', property.node.name]);\n      } else if (property.isStringLiteral()) {\n        params.push(['member', property.node.value]);\n      } else {\n        throw property.buildCodeFrameError(`Unexpected type of a property`);\n      }\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isTaggedTemplateExpression({ tag: prev.node })) {\n      const [quasis, expressionValues] = collectTemplateDependencies(\n        current,\n        options.evaluate\n      );\n      params.push(['template', zip(quasis, expressionValues)]);\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    break;\n  }\n\n  const replacer = (replacement: Expression, isPure: boolean) => {\n    mutate(prev, (p) => {\n      p.replaceWith(replacement);\n      if (isPure) {\n        p.addComment('leading', '#__PURE__');\n      }\n    });\n  };\n\n  const astService = {\n    ...t,\n    addDefaultImport: (importedSource: string, nameHint?: string) =>\n      addDefault(path, importedSource, { nameHint }),\n    addNamedImport: (\n      name: string,\n      importedSource: string,\n      nameHint: string = name\n    ) => addNamed(path, name, importedSource, { nameHint }),\n  };\n\n  return (...args: BuilderArgs) =>\n    new Processor(\n      params,\n      tagSource,\n      astService,\n      tagPath.node.loc ?? null,\n      replacer,\n      ...args\n    );\n}\n\nfunction getDisplayName(\n  path: NodePath<Identifier>,\n  idx: number,\n  filename?: string | null\n): string {\n  let displayName: string | undefined;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isObjectProperty()) {\n      if ('name' in parent.node.key) {\n        displayName = parent.node.key.name;\n      } else if ('value' in parent.node.key) {\n        displayName = parent.node.key.value.toString();\n      } else {\n        const keyPath = parent.get('key');\n        displayName = getSource(keyPath);\n      }\n    } else if (parent.isJSXOpeningElement()) {\n      const name = parent.get('name');\n      if (name.isJSXIdentifier()) {\n        displayName = name.node.name;\n      }\n    } else if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      if (id.isIdentifier()) {\n        displayName = id.node.name;\n      }\n    }\n  }\n\n  if (!displayName) {\n    // Try to derive the path from the filename\n    displayName = basename(filename ?? 'unknown');\n\n    if (filename && /^index\\.[a-z\\d]+$/.test(displayName)) {\n      // If the file name is 'index', better to get name from parent folder\n      displayName = basename(dirname(filename));\n    }\n\n    // Remove the file extension\n    displayName = displayName.replace(/\\.[a-z\\d]+$/, '');\n\n    if (displayName) {\n      displayName += idx;\n    } else {\n      throw new Error(\n        \"Couldn't determine a name for the component. Ensure that it's either:\\n\" +\n          '- Assigned to a variable\\n' +\n          '- Is an object property\\n' +\n          '- Is a prop in a JSX element\\n'\n      );\n    }\n  }\n\n  return displayName;\n}\n\nfunction isTagReferenced(path: NodePath): boolean {\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  let isReferenced = true;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      // FIXME: replace with id.isReferencedIdentifier()\n      if (id.isIdentifier()) {\n        const { referencePaths } = path.scope.getBinding(id.node.name) || {\n          referencePaths: [],\n        };\n\n        isReferenced = referencePaths.length !== 0;\n      }\n    }\n  }\n\n  return isReferenced;\n}\n\nconst counters = new WeakMap<IFileContext, number>();\nconst getNextIndex = (state: IFileContext) => {\n  const counter = counters.get(state) ?? 0;\n  counters.set(state, counter + 1);\n  return counter;\n};\n\nconst cache = new WeakMap<Identifier, BaseProcessor | null>();\n\nexport default function getTagProcessor(\n  path: NodePath<Identifier>,\n  fileContext: IFileContext,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): BaseProcessor | null {\n  if (!cache.has(path.node)) {\n    const root = path.scope.getProgramParent().path as NodePath<Program>;\n    const { imports } = collectExportsAndImports(root);\n    try {\n      const builder = getBuilderForIdentifier(\n        path,\n        imports.filter(explicitImport),\n        fileContext.filename,\n        options\n      );\n      if (builder) {\n        // Increment the index of the style we're processing\n        // This is used for slug generation to prevent collision\n        // Also used for display name if it couldn't be determined\n        const idx = getNextIndex(fileContext);\n\n        const displayName = getDisplayName(path, idx, fileContext.filename);\n\n        const processor = builder(\n          displayName,\n          isTagReferenced(path),\n          idx,\n          options,\n          fileContext\n        );\n\n        cache.set(path.node, processor);\n      } else {\n        cache.set(path.node, null);\n      }\n    } catch (e) {\n      if (e === BaseProcessor.SKIP) {\n        cache.set(path.node, null);\n        return null;\n      }\n\n      if (e instanceof Error) {\n        throw buildCodeFrameError(path, e.message);\n      }\n\n      throw e;\n    }\n  }\n\n  return cache.get(path.node) ?? null;\n}\n"],"mappings":"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"}